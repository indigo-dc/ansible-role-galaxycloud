# This is a sample supervisor config file.
# In this configuration, 2 handlers and 1 uwsgi (uwsgi is more performant than the default Paste) instance with 2 processes and 2 threads will be started.
# In order for this to work, you will need to have a [uwsgi] section in galaxy.ini, as such:
#
# [uwsgi]
# master = True
#
# Further, this assumes uwsgi has been installed through pip into a virtualenv (/home/galaxy/galaxy/.venv/, in this example). 
# If this is not the case, adjust the path to uwsgi accordingly.
# If uwsgi was not installed through pip, include "--plugin python" in the uwsgi command.
# This configuration has been tested with galaxy release_16.01 and uWSGI==2.0.12.
# This assumes galaxy is installed in /home/galaxy/galaxy, so change occurences of /home/galaxy/galaxy accordingly.
# If you want to run galaxy under a different username, change "user = galaxy" to "user = <your user>".
# You will probably want to proxy uwsgi (you can't connect with a browser to uwsgi port 4001) with nginx or apache, 
# see https://wiki.galaxyproject.org/Admin/Config/Performance/Scaling#uWSGI-1
# or https://wiki.galaxyproject.org/Admin/Config/Performance/Scaling#uWSGI-2 . 

{% if supervisor_manage_postgres == "True" %}

{% if ansible_virtualization_type != "docker" %}
[program:pre_postgresql]
user            = root
startsecs       = 0
command         = /bin/bash -c "install -d -m 2775 -o postgres -g postgres /var/run/postgresql"
{% endif %}

[program:postgresql]
user            = postgres
{% if ansible_os_family == "Debian" %}
command         = /usr/lib/postgresql/9.3/bin/postgres -D /etc/postgresql/9.3/main
{% else %}
command         = /usr/bin/postgres -D {{pgsql_pgdata}}
{% endif %}
process_name    = %(program_name)s
stopsignal      = INT
autostart       = true
autorestart     = true
redirect_stderr = true
priority        = 100
{% endif %}

{% if supervisor_manage_nginx == "True" %}
[program:nginx]
command         = /usr/sbin/nginx
directory       = /
umask           = 022
autostart       = true
autorestart     = unexpected
startsecs       = 5
exitcodes       = 0
user            = root
priority        = 200
{% endif %}

{% if supervisor_manage_proftpd == "True" %}
[program:proftpd]
command         = /usr/sbin/proftpd -n -c {{proftpd_conf_path}}
autostart       = true
autorestart     = true
stopasgroup     = true
killasgroup     = true
{% endif %}

[program:galaxy_web]
command         = {{galaxy_venv_path}}/bin/uwsgi --ini-paste {{galaxy_config_file}}
directory       = {{galaxy_install_path}}
umask           = 022
autostart       = true
autorestart     = true
startsecs       = 20
user            = {{galaxy_user}}
{%if galaxy_lrms == "slurm"%}
environment     = VIRTUAL_ENV="{{galaxy_venv_path}}",PATH="{{galaxy_venv_path}}/bin:%(ENV_PATH)s",PYTHONHOME="{{galaxy_venv_path}}",DRMAA_LIBRARY_PATH="/usr/local/lib/libdrmaa.so"
{% else %}
environment     = VIRTUAL_ENV="{{galaxy_venv_path}}",PATH="{{galaxy_venv_path}}/bin:%(ENV_PATH)s"
{% endif %}
numprocs        = 1
stopsignal      = INT
startretries    = 15

[program:handler]
command         = {{galaxy_venv_path}}/bin/python ./scripts/galaxy-main -c {{galaxy_config_file}} --server-name=handler%(process_num)s --log-file={{galaxy_log_path}}/handler%(process_num)s.log
directory       = {{galaxy_install_path}}
process_name    = handler%(process_num)s
numprocs        = 6
umask           = 022
autostart       = true
autorestart     = true
startsecs       = 20
user            = {{galaxy_user}}
{%if galaxy_lrms == "slurm"%}
environment     = VIRTUAL_ENV="{{galaxy_venv_path}}",PATH="{{galaxy_venv_path}}/bin:%(ENV_PATH)s",PYTHONHOME="{{galaxy_venv_path}}",DRMAA_LIBRARY_PATH="/usr/local/lib/libdrmaa.so"
{% else %}
environment     = VIRTUAL_ENV="{{galaxy_venv_path}}",PATH="{{galaxy_venv_path}}/bin:%(ENV_PATH)s"
{% endif %}
startretries    = 15

[group:galaxy]
programs = handler, galaxy_web
