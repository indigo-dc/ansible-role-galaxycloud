---
# Galaxy startup recipe

- name: Copy the startup script
  template:
    src: 'galaxy_startup.j2'
    dest: '/usr/local/bin/galaxy-startup'
    mode: a+x
  become_user: root
  become_method: sudo

- name: Copy Galaxy restart script
  template:
    src: 'galaxy_service.j2'
    dest: '/usr/local/bin/galaxy-restart'
    mode: a+x
  become_user: root
  become_method: sudo

#______________________________________
# Stop services
# the pg_ctl_path variable is defined in task/postgresql.yml

- name: '[EL] Stop PostgreSQL server on CentOS'
  shell: "{{ pg_ctl_path }}/pg_ctl -D {{ pgsql_pgdata }} stop"
  become: True
  become_user: postgres
  when: ansible_os_family == "RedHat"

- name: '[Ubuntu] Stop PostgreSQL server on Ubuntu'
  service:
    name: postgresql
    state: stopped
    enabled: no
  become_user: root
  become_method: sudo
  when: ansible_os_family == "Debian"

#______________________________________
# Start Galaxy on VM

- name: '[VM] Enable and start PostgreSQL server'
  service:
    name: postgresql
    enabled: yes
    state: started
  become_user: root
  become_method: sudo
  when: supervisor_manage_postgres == "False"

- name: '[VM] Enable and start NGINX server'
  service:
    name: nginx
    state: started
    enabled: yes
  become_user: root
  become_method: sudo
  when: supervisor_manage_nginx == "False"

- name: '[VM] Enable and start the proftpd server'
  service:
    name: proftpd
    enabled: yes
    state: started
  become_user: root
  become_method: sudo
  when: supervisor_manage_proftpd == "False"

- name: '[VM] Start Galaxy'
  command: "/usr/bin/galaxy-startup"
  become_user: root
  become_method: sudo
  when: ansible_virtualization_type != "docker"
