---
# Galaxy customization recipe

- name: Enable test toolShed
  copy:
    src: 'tool_sheds_conf.xml'
    dest: '{{galaxy_config_path}}'

#______________________________________
# galaxy.ini configuration

- name: Galaxy configuration
  ini_file:
    dest: '{{ galaxy_config_file }}'
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  with_items:
    - { section: 'app:main', option: 'admin_users', value: "{{ GALAXY_ADMIN_EMAIL }}" }
    - { section: 'app:main', option: 'brand', value: "{{ galaxy_instance_description }}" }
    - { section: 'app:main', option: 'tool_dependency_dir', value: "{{ tool_deps_path }}" }

- name: Database directory configuration
  ini_file:
    dest: '{{ galaxy_config_file }}'
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  with_items:
    - { section: 'app:main', option: 'job_working_directory', value: "{{ galaxy_db_dir }}/job_working_directory" } # if conda is enabled, this config is further modified later.
    - { section: 'app:main', option: 'file_path', value: "{{ galaxy_db_dir }}/files" }
    - { section: 'app:main', option: 'new_file_path', value: "{{ galaxy_db_dir }}/tmp" }
    - { section: 'app:main', option: 'template_cache_path', value: "{{ galaxy_db_dir }}/compiled_templates" }
    - { section: 'app:main', option: 'citation_cache_data_dir', value: "{{ galaxy_db_dir }}/citations/data" }
    - { section: 'app:main', option: 'citation_cache_lock_dir', value: "{{ galaxy_db_dir }}/citations/lock" }
    - { section: 'app:main', option: 'whoosh_index_dir', value: "{{ galaxy_db_dir }}/whoosh_indexes" }
    - { section: 'app:main', option: 'object_store_cache_path', value: "{{ galaxy_db_dir }}/object_store_cache" }
    - { section: 'app:main', option: 'cluster_file_directory', value: "{{ galaxy_db_dir }}/pbs" }
    - { section: 'app:main', option: 'ftp_upload_dir', value: "{{ galaxy_db_dir }}/ftp" }
  when: galaxy_db_dir != "{{ galaxy_install_path }}/database"

- include: conda.yml
  when: use_conda

#______________________________________
# Galaxy administrator: email. username, password and api_key
# IMPORTANT: start Galaxy database postgresql to setup the galaxy administrator credentials

- name: 'Copy create/delete user script to {{ galaxy_custom_script_path }}'
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
    - { src: 'create_galaxy_user.py.j2', dest: '{{ galaxy_custom_script_path }}/create_galaxy_user.py' }
    - { src: 'delete_galaxy_user.py.j2', dest: '{{ galaxy_custom_script_path }}/delete_galaxy_user.py' }
  become_user: root
  become_method: sudo

- name: Setup Galaxy administrator
  command: "{{ galaxy_venv_path }}/bin/python {{ galaxy_custom_script_path }}/create_galaxy_user.py --user {{ GALAXY_ADMIN_EMAIL }} --password {{ GALAXY_ADMIN_PASSWORD }} --username {{ GALAXY_ADMIN_USERNAME }} -c {{ galaxy_config_file }} --key {{ GALAXY_ADMIN_API_KEY }}"
  args:
    chdir: '{{ galaxy_install_path }}/'
  environment:
    PYTHONPATH: "{{ galaxy_install_path }}/lib"
    VIRTUAL_ENV: "{{ galaxy_venv_path }}"

#______________________________________
# id_secret configuration

- name: Generate random id_secret key
  command: "{{ galaxy_custom_script_path }}/pwd-generator -l 32"
  register: galaxy_id_secret

- name: Galaxy id_secret key configuration
  ini_file:
    dest: '{{ galaxy_config_file }}'
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  with_items:
    - { section: 'app:main', option: 'id_secret', value: "{{ galaxy_id_secret.stdout }}" }

#______________________________________
# Update UCSC genome database

- include: updateucsc.yml
  when: update_ucsc
